@page "/Review/Index"
@inject NavigationManager navigationManager
@inject ReviewService reviewService
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize(Roles = "Admin")]


<PageTitle>TixPro - Consulta de Reseñas</PageTitle>

<EditForm Model="ListaReview" class="border shadow-lg p-3 rounded">
    <div class="card-header bg-black text-white text-center py-2 rounded-3">
        <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Consulta de Reseñas</h3>
    </div>
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-auto">
                <div class="card  border-0 rounded-3">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-md-3 text-center text-md-end mb-3 mb-md-0">
                                <label class="d-inline-block fs-4 fw-bold text-black">
                                    Buscar Reseña
                                </label>
                            </div>
                            <!-- Filtro -->
                            <div class="col-md-4 d-flex align-items-center mb-3 mb-md-0">
                                <label for="Filtro" class="form-label fw-bold me-3">Filtrar:</label>
                                <select @bind="filtro" class="form-select form-select-lg">
                                    <option value="nombre">Nombre</option>
                                    <option value="ratingUso">Rating</option>
                                    <option value="fecha">Fecha</option>
                                </select>
                            </div>
                            <!-- Barra de Búsqueda -->
                            <div class="col-md-5 d-flex align-items-center mb-3 mb-md-0">
                                <div class="input-group input-group-lg">
                                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar..." />
                                    <button @onclick="Buscar" class="btn btn-primary" type="button">
                                        <span class="bi bi-search"></span> Buscar
                                    </button>
                                </div>
                                <!-- Restablecer -->
                                <div class="col-md-2 d-flex align-items-center  ms-3">
                                    <button type="button" class="btn btn-outline-secondary d-flex align-items-center gap-2" @onclick="Restablecer">
                                        <span class="bi bi-arrow-counterclockwise"></span>
                                    </button>
                                </div>
                            </div>
                            <!-- FiltroFecha - Mostrar solo si se selecciona "fecha" en el filtro -->
                            @if (filtro == "fecha")
                            {
                                <div class="row mt-3">
                                    <!-- Desde -->
                                    <div class="col-3">
                                        <label class="col-form-label"><strong>Desde</strong></label>
                                        <InputDate class="form-control" @bind-Value="Desde"></InputDate>
                                    </div>

                                    <!-- Hasta -->
                                    <div class="col-3">
                                        <label class="col-form-label"><strong>Hasta</strong></label>
                                        <div class="input-group">
                                            <InputDate class="form-control" @bind-Value="Hasta"></InputDate>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Tabla -->
    <table class="table table-striped table-hover table-bordered text-center align-middle">
        <thead class="bg-dark text-white">
            <tr>
                <th>Nombre</th>
                <th>Rating</th>
                <th>Recomendaria</th>
                <th>Fecha</th>
                <th>Ver</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody class="text-white">
            @foreach (var review in ListaReview)
            {
                <tr>
                    <td class="text-black">@review.usuarioNombre</td>
                    <td class="text-black">@review.ratingUso</td>
                    @if (review.recomendarias)
                    {
                        <td class="text-black">Si</td>
                    }
                    else
                    {
                        <td class="text-black">No</td>
                    }
                    <td class="text-black">@review.fechaReview.ToString("dd/MM/yyyy")</td>
                    <td>
                        <a href="/Review/Details/@review.reviewId" class="btn btn-info btn-sm">
                            <i class="bi bi-eye"></i>
                        </a>
                    </td>
                    <td>
                        <a href="/Review/Delete/@review.reviewId" class="btn btn-danger btn-sm">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="card-footer text-start">
        <p>Total de Contacto: @ListaReview.Count</p>
    </div>
    <div style="height: 415px;"></div>
</EditForm>

<!-- Estilo personalizado -->
<style>
    .table th, .table td {
        color: white !important;
    }


    .table td.text-black {
        color: black !important;
    }

</style>

<!-- Footer-->
<footer class="py-5 bg-dark" style="border-top-left-radius: 20px; border-top-right-radius: 20px;">
    <div class="container"><p class="m-0 text-center text-white">Copyright  &copy; Ozcudi-Studios </p></div>
    <div style="text-align: center;">
        <a href="/About/Index">
            <button class="btn-custom bi bi-github"> Quienes somos </button>
        </a>
    </div>
</footer>

@code {
    [Parameter]
    public int reviewId { get; set; }
    public List<Review> ListaReview { get; set; } = new List<Review>();
    private string valorFiltro = "";
    private string filtro = "id";
    public DateTime? Desde { get; set; }
    public DateTime? Hasta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaReview = await reviewService.Listar(u => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "nombre")
            {
                ListaReview = await reviewService.Listar(u => u.usuarioNombre != null && u.usuarioNombre.Contains(valorFiltro));
            }
            else if (filtro == "fecha" && DateTime.TryParse(valorFiltro, out DateTime fecha))
            {
                ListaReview = await reviewService.Listar(t => t.fechaReview == fecha);
            }
            else if (filtro == "ratingUso" && int.TryParse(valorFiltro, out int rating))
            {
                ListaReview = await reviewService.Listar(t => t.ratingUso == rating);
            }
        }
        else if (filtro == "fecha" && Desde.HasValue && Hasta.HasValue)
        {
            ListaReview = await reviewService.Listar(t => t.fechaReview >= Desde.Value && t.fechaReview <= Hasta.Value);
        }
        else
        {
            ListaReview = await reviewService.Listar(u => true);
        }
    }

    private async Task Restablecer()
    {
        ListaReview = await reviewService.Listar(t => t.reviewId > 0);
        filtro = string.Empty;
        valorFiltro = string.Empty;
        Desde = null;
        Hasta = null;
    }
}
