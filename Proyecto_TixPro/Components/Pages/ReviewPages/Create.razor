@page "/Review/Create/{nombreUser}"
@inject NavigationManager navigationManager
@inject ReviewService reviewService
@rendermode InteractiveServer

@using Microsoft.AspNetCore.Authorization

<PageTitle>TixPro - Reseñas</PageTitle>

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: calc(100vh - 20px); 
        background-color: #f4f4f4;
        padding: 20px;
        box-sizing: border-box;
    }

    .card {
        border-radius: 1.5rem;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        width: 100%;
        max-width: 900px;
        padding: 4rem;
    }

    .form-floating input,
    .form-floating textarea {
        border-radius: 2rem;
        padding: 1rem;
        font-size: 1.5rem;
    }

    .btn-primary {
        background-color: #000;
        border: none;
        padding: 0.75rem;
        border-radius: 1rem;
        font-weight: bold;
        font-size: 1.2rem;
    }

        .btn-primary:hover {
            background-color: #1e40af;
        }

    .text-center p a {
        color: black;
        text-decoration: none;
    }

        .text-center p a:hover {
            text-decoration: underline;
        }

    .preview-image {
        max-width: 100%;
        max-height: 300px;
        margin-top: 20px;
        object-fit: cover;
    }
</style>

<div class="login-container bg-white">
    <div class="card">
        <section>
            <h1 class="text-center mb-10" style="font-size: 2rem; font-weight: bold; color: #333;">Reseña</h1>

            <EditForm Model="review" FormName="submit" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <!--Nombre-->
                <h4 style="font-size: 1.5rem; color: #333;">Datos de Reseña</h4>
                <div class="form-floating mb-4">
                    <InputText @bind-Value="review.usuarioNombre" class="form-control" placeholder="Nombre del contacto" style="font-size: 1.1rem;" disabled />
                    <label for="nombre" style="font-size: 1rem;">Nombre</label>  
                    <ValidationMessage For="@(() => review.usuarioNombre)" class="text-danger" />
                </div>

                <!--Rating-->
                <h4>Que tan facil fue usar TixPro?</h4>
                <div class="form-floating mb-3">
                    <label for="customRange2" style="font-size: 1rem;"></label>
                    <div class="d-flex justify-content-between align-items-center">
                        <span>1</span>
                        <input type="range" class="form-range mx-3" min="1" max="10" id="customRange2" @bind="review.ratingUso">
                        <span>10</span>
                    </div>
                </div>             

                <!--Recomendarias-->  
                <div class="btn border-dark" style="border-radius: 2rem;">
                    <div class="form-check">
                        <input class="form-check-input"
                               type="checkbox"
                               id="recomendariasCheckbox"
                               @bind="review.recomendarias">
                        <label class="form-check-label fw-bold" for="recomendariasCheckbox">
                            <h5>¿Recomendarías TixPro?</h5>
                        </label>
                    </div>
                </div>
                

                <!-- Comentario (cuadro más grande) -->
                <h4>Que cosas deberiamos mejorar?</h4>
                <div class="form-floating mb-4">
                    <InputTextArea @bind-Value="review.cosasMejorar" class="form-control" rows="5" placeholder="Comentario" style="font-size: 1.1rem;  height: 150px;" />
                    <label for="comentario" style="font-size: 1rem;">Comentario</label>
                    <ValidationMessage For="@(() => review.cosasMejorar)" class="text-danger" />
                </div>

                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary" style="font-size: 1.1rem;">Enviar</button>
                </div>

            </EditForm>
            @if (isSuccessMessageVisible)
            {
                <div class="alert alert-success" role="alert">
                    ¡Mensaje enviado correctamente!
                </div>
            }
        </section>
    </div>
</div>

@code {
    [Parameter]
    public string? nombreUser { get; set; }
    public Review review { get; set; } = new Review();
    private bool isSuccessMessageVisible { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        review.usuarioNombre = nombreUser;
    }

    private async Task HandleSubmit()
    {
        isSuccessMessageVisible = true;

        var resultado = await reviewService.Guardar(review);
        if (resultado)
        {
            review = new Review();
        }

        await Task.Delay(3000);
        isSuccessMessageVisible = false;

    }
}

