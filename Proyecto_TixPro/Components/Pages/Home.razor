@page "/"
@inject TicketService ticketService
@inject EventosService eventosService
@rendermode InteractiveServer

<EditForm Model="ListaEvento">
    <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>TixPro</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Bootstrap icons-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="css/styles.css" rel="stylesheet" />
</head>
    <!-- Header-->
    <header class="bg-dark py-5" style="width: 100%; height: 500px; margin: 0; padding: 0; border-radius: 20px;">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                <h1 class="display-4 fw-bolder">Shop in style</h1>
                <p class="lead fw-normal text-white-50 mb-0">With this shop hompeage template</p>
            </div>
        </div>
    </header>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-auto">
                <div class="card shadow-lg border-0 rounded-3">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <!-- Icono de Evento -->
                            <div class="col-md-3 text-center text-md-end mb-3 mb-md-0">
                                <label class="d-inline-block fs-4 fw-bold text-black">
                                    Buscar Evento <span class="bi bi-ticket"></span>
                                </label>
                            </div>
                            <!-- Filtro -->
                            <div class="col-md-4 d-flex align-items-center mb-3 mb-md-0">
                                <label for="Filtro" class="form-label fw-bold me-3">Filtrar:</label>
                                <select @bind="filtro" class="form-select form-select-lg">
                                    <option value="nombre">Nombre</option>
                                    <option value="precio">Precio</option>
                                    <option value="fecha">Fecha</option>
                                </select>
                            </div>

                            <!-- Barra de Búsqueda -->
                            <div class="col-md-5 d-flex align-items-center mb-3 mb-md-0">
                                <label for="ValorFiltro" class="form-label fw-bold me-3"></label>
                                <div class="input-group input-group-lg">
                                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar..." />
                                    <button @onclick="Buscar" class="btn btn-primary" type="button">
                                        <span class="bi bi-search"></span> Buscar
                                    </button>
                                </div>
                                <!-- Restablecer -->
                                <div class="col-3">
                                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-counterclockwise" @onclick="Restablecer">
                                    </button>
                                </div>
                            </div>

                            

                            <!-- FiltroFecha - Mostrar solo si se selecciona "fecha" en el filtro -->
                            @if (filtro == "fecha")
                            {
                                <div class="row mt-3">
                                    <!-- Desde -->
                                    <div class="col-3">
                                        <label class="col-form-label"><strong>Desde</strong></label>
                                        <InputDate class="form-control" @bind-Value="Desde"></InputDate>
                                    </div>

                                    <!-- Hasta -->
                                    <div class="col-3">
                                        <label class="col-form-label"><strong>Hasta</strong></label>
                                        <div class="input-group">
                                            <InputDate class="form-control" @bind-Value="Hasta"></InputDate>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>





  @* Tarjetas para Tickets *@
    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5">
            <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">
                @foreach (var evento in ListaEvento)
                {
                    <div class="col mb-5">
                        <div class="card shadow h-100">
                            <!-- Imagen del Técnico (puedes agregarla si es necesario) -->
                            <!-- Imagen del Evento -->
                            <img class="card-img-top" src="@evento.imagen" alt="Imagen del Evento" />
                            <!-- Detalles del Técnico -->
                            <div class="card-body p-4">
                                <div class="text-center">
                                    <p class="mb-0">RD$ @evento.precio</p>
                                    <!-- Nombre del Técnico -->
                                    <h5 class="fw-bolder">@evento.nombre</h5>
                                    <!-- Información adicional -->
                                    <p class="mb-0 bi bi-calendar4-week">  @evento.lugar</p>
                                    <p class="mb-0 bi bi-geo-alt"> @evento.fecha</p>
                                </div>
                                @* Botón Ticket *@
                                <div class="text-center">
                                    <a href="/Ticket/Compra/@evento.eventoId" class="btn btn-outline-dark mt-auto rounded-pill" type="button">
                                        <span class="bi bi-ticket"></span> Tickets
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section> 

    <div class="card-footer text-start">
        <p>Total de Evento: @ListaEvento.Count</p>
    </div>
</EditForm>

@code {
    public Evento evento { get; set; } = new Evento();
    public List<Evento> ListaEvento = new List<Evento>();
    private string valorFiltro = "";
    private string filtro = "Id";
    public DateTime? Desde { get; set; }
    public DateTime? Hasta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ListaEvento = await eventosService.Listar(c => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int eventoId))
            {
                ListaEvento = await eventosService.Listar(t => t.eventoId == eventoId);
            }
            else if (filtro == "nombre")
            {
                string filtroMinuscula = valorFiltro.ToLower();
                ListaEvento = await eventosService.Listar(t => t.nombre.ToLower().Contains(filtroMinuscula));
            }
            else if (filtro == "precio" && decimal.TryParse(valorFiltro, out decimal precio))
            {
                ListaEvento = await eventosService.Listar(t => t.precio == precio);
            }
            else if (filtro == "fecha" && DateTime.TryParse(valorFiltro, out DateTime fecha))
            {
                ListaEvento = await eventosService.Listar(t => t.fecha == fecha);
            }
        }
        else if (filtro == "fecha" && Desde.HasValue && Hasta.HasValue)
        {
            ListaEvento = await eventosService.Listar(t => t.fecha >= Desde.Value && t.fecha <= Hasta.Value);
        }
        else
        {
            ListaEvento = await eventosService.Listar(t => true);
        }
    }

    private async Task Restablecer()
    {
        ListaEvento = await eventosService.Listar(t => t.eventoId > 0);
        filtro = string.Empty;
        valorFiltro = string.Empty;
        Desde = null;
        Hasta = null;
    }

}
