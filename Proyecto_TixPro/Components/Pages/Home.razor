@page "/"
@inject TicketService ticketService
@inject EventosService eventosService
@inject CarruselService carruselService
@inject NavigationManager navigationManager
@inject IJSRuntime JSRuntime

@rendermode InteractiveServer

<PageTitle>TixPro</PageTitle>

<EditForm Model="ListaEvento">
    <div class="d-flex justify-content-center align-items-center">
        <header class="bg-transparent py-5" style="width: 80%; height: auto; margin: 0; padding: 0; border-radius: 20px; overflow: hidden; padding-left: 50px; padding-right: 50px;">
            <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel" style="border-radius: 20px; overflow: hidden;">
                <!-- Indicadores -->
                <div class="carousel-indicators">
                    @for (int i = 0; i < carruselImages.Count; i++)
                    {
                        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-label="Slide @(i + 1)"></button>
                    }
                </div>
                <!-- Contenido del carrusel -->
                <div class="carousel-inner" style="border-radius: 20px; overflow: hidden;">
                    @foreach (var (image, index) in carruselImages.Select((image, index) => (image, index)))
                    {
                        <div class="carousel-item @(index == 0 ? "active" : "")">
                            <img src="@image" class="d-block w-100" alt="Imagen @(index + 1)" style="width: 1500px; height: 450px; object-fit: cover;">
                        </div>
                    }
                </div>
                <!-- Controles de navegación -->
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Anterior</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Siguiente</span>
                </button>
            </div>
        </header>
    </div>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-auto">
                <div class="card shadow-lg border-0 rounded-3">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <!-- Icono de Evento -->
                            <div class="col-md-3 text-center text-md-end mb-3 mb-md-0">
                                <label class="d-inline-block fs-4 fw-bold text-black">
                                    Buscar Evento <span class="bi bi-ticket"></span>
                                </label>
                            </div>
                            <!-- Filtro -->
                            <div class="col-md-4 d-flex align-items-center mb-3 mb-md-0">
                                <label for="Filtro" class="form-label fw-bold me-3">Filtrar:</label>
                                <select @bind="filtro" class="form-select form-select-lg">
                                    <option value="nombre">Nombre</option>
                                    <option value="precio">Precio</option>
                                    <option value="fecha">Fecha</option>
                                </select>
                            </div>

                            <!-- Barra de Búsqueda -->
                            <div class="col-md-5 col-12 d-flex align-items-center mb-3 mb-md-0">
                                <label for="ValorFiltro" class="form-label fw-bold me-3"></label>
                                <div class="input-group input-group-lg w-100">
                                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar..." />
                                    <button @onclick="Buscar" class="btn btn-primary" type="button">
                                        <span class="bi bi-search"></span> Buscar
                                    </button>
                                </div>
                                <!-- Restablecer -->
                                <div class="col-md-2 d-flex align-items-center  ms-3">
                                    <button type="button" class="btn btn-outline-secondary d-flex align-items-center gap-2" @onclick="Restablecer">
                                        <span class="bi bi-arrow-counterclockwise"></span> 
                                    </button>
                                </div>
                            </div>
                          

                            <!-- FiltroFecha - Mostrar solo si se selecciona "fecha" en el filtro -->
                            @if (filtro == "fecha")
                            {
                                <div class="row mt-3">
                                    <!-- Desde -->
                                    <div class="col-3">
                                        <label class="col-form-label"><strong>Desde</strong></label>
                                        <InputDate class="form-control" @bind-Value="Desde"></InputDate>
                                    </div>

                                    <!-- Hasta -->
                                    <div class="col-3">
                                        <label class="col-form-label"><strong>Hasta</strong></label>
                                        <div class="input-group">
                                            <InputDate class="form-control" @bind-Value="Hasta"></InputDate>
                                        </div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>





  @* Tarjetas para Tickets *@
    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5">
            <div class="row gx-4 gx-lg-5 row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">
                @foreach (var evento in ListaEvento)
                {
                    <div class="col mb-5">
                        <div class="card shadow h-100">
                            <!-- Imagen del Evento -->
                            <img class="card-img-top" src="@evento.imagen" alt="Imagen del Evento" />
                            <div class="card-body p-4">
                                <div class="text-center">
                                    <p class="mb-0">RD$ @evento.precio</p>
                                    <h5 class="fw-bolder">@evento.nombre</h5>
                                
                                    <!-- Información adicional -->
                                    <p class="mb-0 bi bi-geo-alt">  @evento.lugar</p>
                                    <p class="mb-0 bi bi-calendar4-week"> @evento.fecha.ToString("dd/MM/yyyy")</p>
                                    <p>
                                        <i class="bi bi-alarm"></i>
                                        @(DateTime.TryParse(evento.hora, out var horaEvento)
                                            ? $"{horaEvento:hh:mm tt}"
                                            : "Hora inválida")
                                    </p>

                                </div>
                                @* Botón Ticket *@
                                <div class="text-center">
                                    <a href="/Ticket/Compra/@evento.eventoId" class="btn btn-outline-dark mt-auto rounded-pill" type="button">
                                        <span class="bi bi-ticket"></span> Tickets
                                    </a>
                                </div>

                                @* Botón Edit *@
                                <AuthorizeView Roles="Admin">
                                    <ChildContent Context="adminContext">
                                        <div class="text-center">
                                            <a href="/Eventos/Edit/@evento.eventoId" class="btn btn-outline-success mt-auto rounded-pill" type="button">
                                                <span class="bi bi-ticket"></span> Edit Evento
                                            </a>
                                        </div>
                                    </ChildContent>
                                </AuthorizeView>                                

                                @* Botón Delete *@
                                <AuthorizeView Roles="Admin">
                                    <ChildContent Context="adminContext">
                                        <div class="text-center">
                                            <a href="/Eventos/Delete/@evento.eventoId" class="btn btn-outline-danger mt-auto rounded-pill" type="button">
                                                <span class="bi bi-ticket"></span> Eliminar Evento
                                            </a>
                                        </div>
                                    </ChildContent>
                                </AuthorizeView>
                                

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>

    <!-- Contenedor del chatbot Voiceflow -->
    <div id="voiceflow-widget"></div>

    <div class="card-footer text-start">
        <p>Total de Evento: @ListaEvento.Count</p>
    </div>
     <!-- Footer-->
    <footer class="py-5 bg-dark" style="border-top-left-radius: 20px; border-top-right-radius: 20px;">
        <div class="container"><p class="m-0 text-center text-white">Copyright  &copy; Ozcudi-Studios </p></div>
        <div style="text-align: center;">
            <a href="/About/Index">
                <button class="btn-custom bi bi-github"> Quienes somos </button>
            </a>
        </div>
    </footer>

</EditForm>

@code {
    public Evento evento { get; set; } = new Evento();
    public List<Evento> ListaEvento = new List<Evento>();
    private List<string> carruselImages = new List<string>();
    private string valorFiltro = "";
    private string filtro = "Id";
    public DateTime? Desde { get; set; }
    public DateTime? Hasta { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("eval", @"
                (function (d, t) {
                    var v = d.createElement(t), s = d.getElementsByTagName(t)[0];
                    v.onload = function () {
                        window.voiceflow.chat.load({
                            verify: { projectID: '674be8b5da1cb2ab8ae80293' },
                            url: 'https://general-runtime.voiceflow.com',
                            versionID: 'production'
                        });
                    };
                    v.src = 'https://cdn.voiceflow.com/widget/bundle.mjs'; 
                    v.type = 'text/javascript'; 
                    s.parentNode.insertBefore(v, s);
                })(document, 'script');
            ");
        }
    }

    public void Resenas()
    {
        navigationManager.NavigateTo("/Review/Create");
    }

    protected override async Task OnInitializedAsync()
    {
        ListaEvento = await eventosService.Listar(c => true);
        var carrusel = await carruselService.ObtenerUltimoCarruselAsync();
        if (carrusel != null)
        {
            carruselImages.AddRange(new[]
            {
                carrusel.imagen1,
                carrusel.imagen2,
                carrusel.imagen3,
                carrusel.imagen4,
                carrusel.imagen5
            });
        }
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "id" && int.TryParse(valorFiltro, out int eventoId))
            {
                ListaEvento = await eventosService.Listar(t => t.eventoId == eventoId);
            }
            else if (filtro == "nombre")
            {
                string filtroMinuscula = valorFiltro.ToLower();
                ListaEvento = await eventosService.Listar(t => t.nombre.ToLower().Contains(filtroMinuscula));
            }
            else if (filtro == "precio" && decimal.TryParse(valorFiltro, out decimal precio))
            {
                ListaEvento = await eventosService.Listar(t => t.precio == precio);
            }
            else if (filtro == "fecha" && DateTime.TryParse(valorFiltro, out DateTime fecha))
            {
                ListaEvento = await eventosService.Listar(t => t.fecha == fecha);
            }
        }
        else if (filtro == "fecha" && Desde.HasValue && Hasta.HasValue)
        {
            ListaEvento = await eventosService.Listar(t => t.fecha >= Desde.Value && t.fecha <= Hasta.Value);
        }
        else
        {
            ListaEvento = await eventosService.Listar(t => true); 
        }
    }

    private async Task Restablecer()
    {
        ListaEvento = await eventosService.Listar(t => t.eventoId > 0);
        filtro = string.Empty;
        valorFiltro = string.Empty;
        Desde = null;
        Hasta = null;
    }


}
