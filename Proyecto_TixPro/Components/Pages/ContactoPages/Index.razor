@page "/Contacto/Index"
@inject NavigationManager navigationManager
@inject ContactoService contactoService
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize(Roles = "Admin")]


<PageTitle>TixPro - Consulta de Contacto</PageTitle>

<EditForm Model="ListaContacto" class="border shadow-lg p-3 rounded">
    <div class="card-header bg-black text-white text-center py-2 rounded-3">
        <h3 style="font-weight: bold;" class="mb-0 font-weight-bold">Consulta de Contacto</h3>
    </div>
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-auto">
                <div class="card  border-0 rounded-3">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <!-- Icono de Usuario -->
                            <div class="col-md-3 text-center text-md-end mb-3 mb-md-0">
                                <label class="d-inline-block fs-4 fw-bold text-black">
                                    Buscar Contacto 
                                </label>
                            </div>
                            <!-- Filtro -->
                            <div class="col-md-4 d-flex align-items-center mb-3 mb-md-0">
                                <label for="Filtro" class="form-label fw-bold me-3">Filtrar:</label>
                                <select @bind="filtro" class="form-select form-select-lg">
                                    <option value="nombre">Nombre</option>
                                    <option value="whatsapp">WhatsApp</option>
                                    <option value="asunto">Asunto</option>
                                </select>
                            </div>
                            <!-- Barra de Búsqueda -->
                            <div class="col-md-5 d-flex align-items-center mb-3 mb-md-0">
                                <div class="input-group input-group-lg">
                                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar..." />
                                    <button @onclick="Buscar" class="btn btn-primary" type="button">
                                        <span class="bi bi-search"></span> Buscar
                                    </button>
                                </div>
                                <!-- Restablecer -->
                                <div class="col-md-2 d-flex align-items-center  ms-3">
                                    <button type="button" class="btn btn-outline-secondary d-flex align-items-center gap-2" @onclick="Restablecer">
                                        <span class="bi bi-arrow-counterclockwise"></span>
                                    </button>
                                    <button class="btn btn-custom btn-black d-flex align-items-center bi bi-box-arrow-left  ms-5" @onclick="Volver">
                                        Volver
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Tabla -->
    <table class="table table-striped table-hover table-bordered text-center align-middle">
        <thead class="bg-dark text-white">
            <tr>
                <th>Nombre</th>
                <th>WhatsApp</th>
                <th>Asunto</th>
                <th>Ver</th>
                <th>Eliminar</th>
            </tr>
        </thead>
        <tbody class="text-white">
            @foreach (var contacto in ListaContacto)
            {
                <tr>
                    <td class="text-black">@contacto.nombre</td>
                    <td class="text-black">@contacto.whatsapp</td>
                    <td class ="text-black">@contacto.asunto</td>
                    <td>
                        <a href="/Contacto/Details/@contacto.contactoId" class="btn btn-info btn-sm">
                            <i class="bi bi-eye"></i>
                        </a>
                    </td>
                    <td>
                        <a href="/Contacto/Delete/@contacto.contactoId" class="btn btn-danger btn-sm">
                            <i class="bi bi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="card-footer text-start">
        <p>Total de Contacto: @ListaContacto.Count</p>
    </div>
    <div style="height: 415px;"></div>
</EditForm>
<!-- Estilo personalizado -->
<style>
    .table th, .table td {
        color: white !important;
    }

    
    .table td.text-black {
        color: black !important;
    }


    .btn-custom {
        border: none;
        padding: 1rem 1.5rem;
        border-radius: 0.75rem;
        font-weight: bold;
        font-size: 1.25rem;
        color: white;
        transition: background-color 0.3s, transform 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-group {
        display: flex;
        gap: 1rem;
    }

    .btn-black {
        background-color: black;
    }

        .btn-black:hover {
            background-color: #1e40af;
            transform: translateY(-2px);
        }

    .bi {
        margin-right: 0.5rem;
    }

</style>

<!-- Footer-->
<footer class="py-5 bg-dark" style="border-top-left-radius: 20px; border-top-right-radius: 20px;">
    <div class="container"><p class="m-0 text-center text-white">Copyright  &copy; Ozcudi-Studios </p></div>
    <div style="text-align: center;">
        <a href="/About/Index">
            <button class="btn-custom2 bi bi-github"> Quienes somos </button>
        </a>
    </div>
</footer>

@code {
    public List<Contacto> ListaContacto { get; set; } = new List<Contacto>();
    private string valorFiltro = "";
    private string filtro = "id";

    protected override async Task OnInitializedAsync()
    {
        ListaContacto = await contactoService.Listar(u => true);
    }

    public async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(valorFiltro))
        {
            if (filtro == "nombre")
            {
                ListaContacto = await contactoService.Listar(u => u.nombre != null && u.nombre.Contains(valorFiltro));
            }
            else if (filtro == "whatsapp")
            {
                ListaContacto = await contactoService.Listar(u => u.whatsapp != null && u.whatsapp.Contains(valorFiltro));
            }
            else if (filtro == "asunto")
            {
                ListaContacto = await contactoService.Listar(u => u.asunto != null && u.asunto.Contains(valorFiltro));
            }
        }
        else
        {
            ListaContacto = await contactoService.Listar(u => true);
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/");
    }

    private async Task Restablecer()
    {
        ListaContacto = await contactoService.Listar(t => t.contactoId > 0);
        filtro = string.Empty;
        valorFiltro = string.Empty;
    }
}
