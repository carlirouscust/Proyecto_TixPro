@page "/Delete/Confirmar/{eventoId:int}"
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager navigationManager
@inject TarjetaService tarjetaService
@inject EventosService eventosService

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 80vh;
        background-color: #fff;
    }

    .card {
        border-radius: 5rem;
        box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        width: 90%;
        max-width: 500px;
        padding: 3rem;
        text-align: center;
    }

    h1 {
        font-size: 2.5rem;
        color: #343a40;
        margin-bottom: 1.5rem;
    }

    p {
        font-size: 1.1rem;
        color: #6c757d;
        margin-bottom: 2rem;
    }

    .btn-success {
        background-color: #28a745;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 2rem;
        font-size: 1.2rem;
        font-weight: bold;
        color: white;
        transition: background-color 0.3s ease;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .bi-check-circle-fill {
        margin-right: 10px;
    }

    .status-message {
        font-size: 1.2rem;
        margin-bottom: 2rem;
        color: #28a745;
    }

    .back-button {
        display: inline-block;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        border-radius: 50px;
        color: black;
        background-color: #f8f9fa;
        border: 1px solid #ddd;
        transition: background-color 0.3s ease;
        text-decoration: none;
        margin-top: 2rem;
    }

        .back-button:hover {
            background-color: #e9ecef;
            text-decoration: none;
        }

        .back-button .bi {
            margin-right: 8px;
        }

    .btn-custom {
        font-size: 1.5rem; /* Ajusta el tamaño del texto */
        padding: 1rem 2rem; /* Ajusta el espacio interno */
    }

</style>

<PageTitle>TixPro - Eliminar Evento</PageTitle>
<div class="login-container">
    <div class="card rouded-pill shadow">
        @if (evento != null)
        {
            <h2>¿Estas seguro que deseas eliminar este evento?</h2>
        }
        else
        {
            <h1>Cargando evento...</h1>
        }
        <div class="d-flex justify-content-center gap-3 mt-3">
            <button class="btn btn-custom btn-danger rounded-pill" @onclick="EliminarEvento">Si</button>
            <button class="btn btn-custom btn-dark rounded-pill" @onclick="Volver">No</button>
        </div>
    </div>
</div>

@code {
    [Parameter] public int eventoId { get; set; }
    public Evento evento { get; set; } = new Evento();

    protected override async Task OnInitializedAsync()
    {
        evento = await eventosService.Buscar(eventoId);
    }

    public async Task EliminarEvento()
    {
        var eliminado = await eventosService.Eliminar(evento.eventoId);
        navigationManager.NavigateTo("/");
    }


    public void Volver()
    {
        navigationManager.NavigateTo($"/Eventos/Delete/{evento.eventoId}");
    }
}
