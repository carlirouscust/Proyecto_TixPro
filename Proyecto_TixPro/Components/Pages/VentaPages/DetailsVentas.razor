@page "/Ventas/Details/{eventoId:int}"
@inject NavigationManager navigationManager
@inject UsuariosService usuariosService
@inject TicketService ticketService
@inject EventosService eventosService
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize(Roles = "Admin")]

<PageTitle>TixPro - Ventas</PageTitle>

<EditForm Model="evento">
    <section class="py-5">
        <div class="container px-4 px-lg-5 mt-5 shadow rounded-pill">
            <div class="row align-items-center">
                    <!-- Imagen -->
                    <div class="col-md-6">
                        <img class="card-img" src="@evento.imagen" alt="Imagen del Evento">
                    </div>
                    <!-- Contenido de Texto -->
                <div class="col-md-6">
                    <div class="card-body">
                        <h3 class="fw-bold">@evento.nombre</h3>
                        <p class="text-muted">
                            <span class="text-dark fw-bold">RD$ @evento.precio</span>
                        </p>
                        <p><i class="bi bi-calendar4-week"></i> @evento.lugar</p>
                        <p><i class="bi bi-geo-alt"></i> @evento.fecha.ToString("dd/MM/yyyy")</p>
                        <p>
                            <i class="bi bi-alarm"></i>
                            @(DateTime.TryParse(evento.hora, out var horaEvento)
                                ? $"{horaEvento:hh:mm tt}"
                                : "Hora inválida")
                        </p>
                        <p><strong>Tickets vendidos:</strong> @totalTickets</p>
                        <p><strong>Dinero recaudado:</strong> RD$ @totalRevenue</p>

                        <div class="btn-group">
                            <button class="btn btn-custom btn-black bi bi-box-arrow-left" @onclick="Volver">Volver</button>
                        </div>
                   
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Footer-->
    <footer class="py-5 bg-dark" style="border-top-left-radius: 20px; border-top-right-radius: 20px;">
        <div class="container"><p class="m-0 text-center text-white">Copyright  &copy; Ozcudi-Studios </p></div>
        <div style="text-align: center;">
            <a href="/About/Index">
                <button class="btn-custom bi bi-github"> Quienes somos </button>
            </a>
        </div>
    </footer>
</EditForm>

<style>
    .btn-custom {
        border: none;
        padding: 1rem 1.5rem;
        border-radius: 0.75rem;
        font-weight: bold;
        font-size: 1.25rem;
        color: white;
        transition: background-color 0.3s, transform 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-group {
        display: flex;
        gap: 1rem;
    }

    .btn-black {
        background-color: black; 
    }

        .btn-black:hover {
            background-color: #1e40af;
            transform: translateY(-2px);
        }

    .bi {
        margin-right: 0.5rem;
    }
</style>


@code {
    [Parameter]
    public int eventoId { get; set; }
    public Evento evento { get; set; } = new Evento();
    private int totalTickets { get; set; } = 0;
    private decimal totalRevenue { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        evento = await eventosService.Buscar(eventoId);
        totalTickets = await ticketService.GetTotalTicketsSold(eventoId);
        totalRevenue = await ticketService.GetTotalRevenue(eventoId);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Ventas/Index/");
    }
}
