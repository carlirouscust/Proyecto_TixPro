@page "/Eventos/Delete/{eventoId:int}"
@inject NavigationManager NavigationManager
@inject EventosService eventosService
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="evento">
    <style>
        /* Estilo común para los botones */
        .btn-custom {
            border: none;
            padding: 1rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: bold;
            font-size: 1.25rem;
            color: white;
            transition: background-color 0.3s, transform 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Estilo para el botón Eliminar (rojo) */
        .btn-danger {
            background-color: red; /* Color rojo */
        }

        .btn-danger:hover {
            background-color: darkred; /* Color más oscuro cuando pasa el mouse */
            transform: translateY(-2px);
        }
        /* Alineación de botones uno al lado del otro */
        .btn-group {
            display: flex;
            gap: 1rem; /* Espacio entre los botones */
        }
        /* Estilo para el botón Volver (negro) */
        .btn-black {
            background-color: black; /* Color negro */
        }

        .btn-black:hover {
            background-color: #1e40af; /* Color más oscuro cuando pasa el mouse */
            transform: translateY(-2px);
        }

        /* Iconos en los botones */
        .bi {
            margin-right: 0.5rem;
        }

    </style>
    <section class="py-5 ">
        <div class="container px-4 px-lg-5 mt-5 shadow rounded-pill">
            <div class="row align-items-center">
                <!-- Imagen -->
                <div class="col-md-6">
                    <img class="card-img" src="@evento.imagen" alt="Imagen del Evento">
                </div>
                <!-- Contenido de Texto -->
                <div class="col-md-6">
                    <div class="card-body">
                        <h4 class="fw-bold">@evento.nombre</h4>
                        <p class="text-muted">
                            <span class="text-dark fw-bold">RD$ @evento.precio</span>
                        </p>
                        <p><i class="bi bi-geo-alt"></i> @evento.lugar</p>
                        <p><i class="bi bi-calendar4-week "></i> @evento.fecha.ToString("dd/MM/yyyy")</p>
                        <p>
                            <i class="bi bi-alarm"></i>
                            @(DateTime.TryParse(evento.hora, out var horaEvento)
                                ? $"{horaEvento:hh:mm tt}"
                                : "Hora inválida")
                        </p>

                        <div class="btn-group">
                            <a href="/Delete/Confirmar/@evento.eventoId" class="btn btn-custom btn-danger">
                                Eliminar Evento
                            </a>
                            <button class="btn btn-custom btn-black bi bi-box-arrow-left" @onclick="Volver">Volver</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</EditForm>
<!-- Footer-->
<footer class="py-5 bg-dark" style="border-top-left-radius: 20px; border-top-right-radius: 20px;">
    <div class="container"><p class="m-0 text-center text-white">Copyright  &copy; Ozcudi-Studios </p></div>
    <div style="text-align: center;">
        <a href="/About/Index">
            <button class="btn-custom2 bi bi-github"> Quienes somos </button>
        </a>
    </div>
</footer>

@code {
    [Parameter]
    public int eventoId { get; set; }
    public Evento evento { get; set; } = new Evento();

    protected override async Task OnInitializedAsync()
    {
        evento = await eventosService.Buscar(eventoId);
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/");
    }
}

