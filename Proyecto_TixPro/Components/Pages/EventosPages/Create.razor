@page "/Eventos/Create"
@inject NavigationManager NavigationManager
@inject EventosService EventosService

<PageTitle>Crear Evento</PageTitle>

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: calc(100vh - 20px); /* Altura casi completa, dejando 20px de margen arriba y abajo */
        background-color: #fff;
        padding: 20px; /* Agregamos un padding para que no toque los bordes */
        box-sizing: border-box; /* Asegura que el padding no afecte la altura total */
    }

    .card {
        border-radius: 1.5rem;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        width: 100%; /* Asegura que ocupe todo el espacio disponible */
        max-width: 900px; /* Límite de anchura para no ser demasiado grande */
        padding: 4rem;
    }

    .form-floating input {
        border-radius: 2rem;
        padding: 1rem;
        font-size: 1.5rem;
    }

    .btn-primary {
        background-color: #000;
        border: none;
        padding: 0.75rem;
        border-radius: 1rem;
        font-weight: bold;
        font-size: 1.2rem;
    }

    .btn-primary:hover {
        background-color: #1e40af;
    }

    .text-center p a {
        color: black;
        text-decoration: none;
    }

    .text-center p a:hover {
        text-decoration: underline;
    }

    .form-floating textarea {
        height: 100px;
    }

    /* Estilo para la imagen previa */
    .preview-image {
        max-width: 100%;
        max-height: 300px;
        margin-top: 20px;
        object-fit: cover;
    }
</style>

<div class="login-container">
    <div class="card">
        <section>
            <h1 class="text-center mb-5" style="font-size: 2rem; font-weight: bold; color: #333;">Registrar Evento</h1>
            <StatusMessage Message="@errorMessage" />

            <!-- Formulario con un FormName único -->
            <EditForm Model="Evento" OnValidSubmit="RegistrarEvento" FormName="eventoForm">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <div class="form-floating mb-4">
                    <InputText @bind-Value="Evento.nombre" class="form-control" placeholder="Nombre del evento" style="font-size: 1.1rem;" />
                    <label for="nombre" style="font-size: 1rem;">Nombre del Evento</label>
                    <ValidationMessage For="@(() => Evento.nombre)" class="text-danger" />
                </div>

                <div class="form-floating mb-3">
                    <InputDate @bind-Value="Evento.fecha" class="form-control" placeholder="Fecha del Evento" style="font-size: 1.1rem;" />
                    <label for="fecha" style="font-size: 1rem;">Fecha del Evento</label>
                    <ValidationMessage For="@(() => Evento.fecha)" class="text-danger" />
                </div>

                <div class="form-floating mb-3">
                    <InputText @bind-Value="Evento.lugar" class="form-control" placeholder="Lugar del Evento" style="font-size: 1.1rem;" />
                    <label for="lugar" style="font-size: 1rem;">Lugar del Evento</label>
                    <ValidationMessage For="@(() => Evento.lugar)" class="text-danger" />
                </div>

                <div class="form-floating mb-3">
                    <InputNumber @bind-Value="Evento.precio" class="form-control" placeholder="Precio del Evento" style="font-size: 1.1rem;" />
                    <label for="precio" style="font-size: 1rem;">Precio del Evento</label>
                    <ValidationMessage For="@(() => Evento.precio)" class="text-danger" />
                </div>

                <!-- Campo para seleccionar la imagen -->
                <div class="form-floating mb-3">
                    <InputFile OnChange="OnImageChange" class="form-control" />
                    <label for="imagen" style="font-size: 1rem;">Imagen del Evento</label>
                    <ValidationMessage For="@(() => Evento.imagen)" class="text-danger" />
                </div>

                <!-- Previsualización de la imagen seleccionada solo si Evento.imagen tiene un valor -->
                @if (!string.IsNullOrEmpty(imagenPreview))
                {
                    <img src="@imagenPreview" class="preview-image" alt="Previsualización de Imagen" style="max-width: 100%; max-height: 200px; object-fit: cover;" />
                }

                <div>
                    <button type="submit" class="w-100 btn btn-lg btn-primary" style="font-size: 1.1rem;">Registrar Evento</button>
                </div>
            </EditForm>
        </section>
    </div>    
</div>


@code {
    private Evento Evento { get; set; } = new Evento();
    private string? errorMessage;
    private string? imagenPreview;

    private async Task OnImageChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var stream = file.OpenReadStream();
            var memoryStream = new MemoryStream();
            await stream.CopyToAsync(memoryStream);
            var base64Image = Convert.ToBase64String(memoryStream.ToArray());
            
            // Actualizar la propiedad Evento.imagen en tiempo real
            Evento.imagen = $"data:{file.ContentType};base64,{base64Image}";

            // Actualizar la variable imagenPreview para la previsualización
            imagenPreview = $"data:{file.ContentType};base64,{base64Image}";
            
            // Forzar la actualización de la UI
            StateHasChanged();
        }
    }

    private async Task RegistrarEvento()
    {
        // Verifica si los datos son correctos
        Console.WriteLine($"Evento: {Evento.nombre}, {Evento.fecha}, {Evento.lugar}, {Evento.precio}");
        
            var resultado = await EventosService.Guardar(Evento);
            
            if (resultado)
            {
                NavigationManager.NavigateTo("/Eventos/Success");
            }
            else
            {
                errorMessage = "Error al registrar el evento.";
            }
        
        // else
        // {
        //     errorMessage = "Por favor, complete todos los campos.";
        // }
    }
}
