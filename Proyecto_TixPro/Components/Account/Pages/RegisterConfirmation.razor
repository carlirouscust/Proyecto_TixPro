@page "/Account/RegisterConfirmation"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using Proyecto_TixPro.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Confirmacion de registro</PageTitle>
<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 80vh;
        background-color: #fff;
    }

    .card {
        border-radius: 1.5rem;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        width: 90%;
        max-width: 600px;
        padding: 2rem;
        text-align: center;
    }

    h1 {
        font-size: 2.5rem;
        color: black;
        margin-bottom: 1.5rem;
    }

    p {
        font-size: 1.1rem;
        color: #555;
        margin-bottom: 1.5rem;
    }

    .btn-success {
        background-color: #28a745;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 2rem;
        font-size: 1.2rem;
        font-weight: bold;
        color: white;
        transition: background-color 0.3s ease;
    }

        .btn-success:hover {
            background-color: #218838;
        }

    .bi-check-circle-fill {
        margin-right: 10px;
    }

    .status-message {
        font-size: 1.2rem;
        margin-bottom: 1.5rem;
    }
</style>
<div class="login-container text-center">
    <div class="card shadow" style="width: 900px; height: auto;">
        <h1>Confirmacion de registro</h1>

        <StatusMessage Message="@statusMessage" />

        @if (emailConfirmationLink is not null)
        {
            <p>
                Haga click en Confirmar para habilitar su cuenta.
                <a href="@emailConfirmationLink" class="btn btn-success bi bi-check-circle-fill" type="button"> Confirmar</a>
            </p>
        }
        else
        {
            <p>Porfavor verifica tu email para poder confirmar tu cuenta.</p>
        }
    </div>
</div>


@code {
    private string? emailConfirmationLink;
    private string? statusMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Email is null)
        {
            RedirectManager.RedirectTo("");
        }

        var user = await UserManager.FindByEmailAsync(Email);
        if (user is null)
        {
            HttpContext.Response.StatusCode = StatusCodes.Status404NotFound;
            statusMessage = "Error finding user for unspecified email";
        }
        else if (EmailSender is IdentityNoOpEmailSender)
        {
            // Once you add a real email sender, you should remove this code that lets you confirm the account
            var userId = await UserManager.GetUserIdAsync(user);
            var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
            code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
            emailConfirmationLink = NavigationManager.GetUriWithQueryParameters(
                NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
                new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code, ["returnUrl"] = ReturnUrl });
        }
    }
}
