@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using Proyecto_TixPro.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>TixPro - Perfil</PageTitle>

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f7f7f7;
    }

    .card {
        border-radius: 1.5rem;
        box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
        background-color: #fff;
        width: 150%;
        max-width: 700px;
        padding: 4rem;
    }

    .form-floating input {
        border-radius: 2rem;
        padding: 1rem;
        font-size: 1.5rem;
    }

    .btn-primary {
        background-color: #000;
        border: none;
        padding: 0.75rem;
        border-radius: 1rem;
        font-weight: bold;
        font-size: 1.2rem;
    }

        .btn-primary:hover {
            background-color: #1e40af;
        }

    .text-center p a {
        color: black;
        text-decoration: none;
    }

        .text-center p a:hover {
            text-decoration: underline;
        }
</style>

<StatusMessage />

<div class="row">
    <div class="col-md-6">
        <h3>Perfil</h3>
        <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="form-floating mb-3">
                <input type="text" value="@username" class="form-control" placeholder="Elija su nombre de usuario." disabled />
                <label for="username" class="form-label">Nombre de usuario</label>
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.PhoneNumber" class="form-control" placeholder="Introduzca su número de teléfono." />
                <label for="phone-number" class="form-label">Número Teléfono</label>
                <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Guardar</button>
        </EditForm>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Tu perfil ha sido actualizado", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }
    }
}
